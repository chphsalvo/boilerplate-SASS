{"version":3,"sources":["style.scss","style.css","import/_import.scss","settings/_breakpoints.scss","settings/_colors.scss","mixin/_responsive.scss","mixin/_color.scss","typography/_typography.scss","components/_colors.scss","components/_buttons.scss","components/_forms.scss"],"names":[],"mappings":"AAAA;;;;ECIE;ADED;;;;ECGC;ADKF,8FAAO;AEdP;;;;EDeE;AEfF;;;;EFoBE;AGpBF;;;;EHyBE;AIzBF;;;;EJ8BE;AK9BF;;;;ELmCE;AMnCF;;;;ENwCE;AOxCF;;;;EP6CE;AQ7CF;;;;ERkDE;ASlDF;;;;ETuDE;ADtCF;EACC,sCAAA;EAAwC,UAAA;EAExC;;;;;;EC6CC,EDvCC","file":"style.css","sourcesContent":["/**\n * style.scss Style\n *\n * Write a description\n */\n\n /*\n * INDEX\n * - title\n * - title\n */\n\n// Import front-end-framework\n// Check latest version: https://github.com/chphsalvo/front-end-framework/releases\n@import \"https://cdn.jsdelivr.net/gh/chphsalvo/front-end-framework@0.8/dist/css/style.min.css\";\n@import \"import/import\";\n\nbody{\n\t/*background-color:color(black,base);*/ /*palette*/\n\n\t/*\n\t@include responsive ('small'){\n\t\tbody{\n\t\t\tbackground:#000;\n\t\t}\n\t}\n\t*/\n}\n","/**\n * style.scss Style\n *\n * Write a description\n */\n/*\n * INDEX\n * - title\n * - title\n */\n@import \"https://cdn.jsdelivr.net/gh/chphsalvo/front-end-framework@0.8/dist/css/style.min.css\";\n/**\n * import/_import.scss Import\n *\n * Write a description\n */\n/**\n * settings/_breackpoints.scss Breackpoints\n *\n * Write a description\n */\n/**\n * settings/_colors.scss Colors\n *\n * Write a description\n */\n/**\n * mixin/_responsive.scss Responsive\n *\n * Write a description\n */\n/**\n * mixin/_color.scss Color\n *\n * Write a description\n */\n/**\n * typography/_typography.scss Typography\n *\n * Write a description\n */\n/**\n * components/_colors.scss Colors\n *\n * Write a description\n */\n/**\n * components/_buttons.scss Buttons\n *\n * Write a description\n */\n/**\n * components/_forms.scss Forms\n *\n * Write a description\n */\nbody {\n  /*background-color:color(black,base);*/\n  /*palette*/\n  /*\n\t@include responsive ('small'){\n\t\tbody{\n\t\t\tbackground:#000;\n\t\t}\n\t}\n\t*/ }\n","/**\n * import/_import.scss Import\n *\n * Write a description\n */\n\n// Settings\n@import '../settings/breakpoints';\n@import '../settings/colors';\n\n// Mixin\n@import '../mixin/responsive';\n@import '../mixin/color';\n\n// Typography\n@import '../typography/typography';\n\n// Components\n@import '../components/colors';\n@import '../components/buttons';\n@import '../components/forms';\n","/**\n * settings/_breackpoints.scss Breackpoints\n *\n * Write a description\n */\n \n$breakpoints: (\n\t'huge':(min-width: 2560px),\n\t'xbig':(min-width: 1600px),\n\t'big':(max-width: 1440px),\n\t'xlarge': (max-width: 1366px),\n\t'large': (max-width: 1024px),\n\t'medium': (max-width: 768px),\n\t'small': (max-width: 640px),\n);\n","/**\n * settings/_colors.scss Colors\n *\n * Write a description\n */\n\n$palettes: (\n  black: (\n    base: #000000\n  )\n\t/*\n\tblue: (\n    darker: #333333,\n    dark: #333333,\n    base: #333333,\n    light: #333333,\n    lighter: #333333\n  )\n\t*/\n);\n","/**\n * mixin/_responsive.scss Responsive\n *\n * Write a description\n */\n\n/// Responsive breakpoint manager\n/// @access public\n/// @param {String} $breakpoint - Breakpoint\n/// @requires $breakpoints\n/// @example\n/// @include responsive ('small'){\n///\t->code here\n/// }\n\n@mixin responsive($breakpoint) {\n  $raw-query: map-get($breakpoints, $breakpoint);\n\n  @if $raw-query {\n    $query: if(\n      type-of($raw-query) == 'string',\n      unquote($raw-query),\n      inspect($raw-query)\n    );\n\n    @media #{$query} {\n      @content;\n    }\n  } @else {\n    @error 'No value found for `#{$breakpoint}`. '\n         + 'Please make sure it is defined in `$breakpoints` map.';\n  }\n}\n","/**\n * mixin/_color.scss Color\n *\n * Write a description\n */\n\n/// Colors manager\n/// @access public\n/// @param {String} $color - Color name\n/// @param {String} $tone - Color tone\n/// @example\n/// background-color: color(blue,base);\n/// color: color(blue,base);\n/// border-color: color(blue,base);\n\n@function color($color,$tone){\n\n    /*@warn map-get($palettes,$color);*/\n\n    @if map-has-key($palettes,$color){\n        $color: map-get($palettes,$color);\n\n            @if map-has-key($color,$tone){\n                $tone: map-get($color,$tone);\n                @return $tone;\n            }\n\n            @warn \"unknown tone `#{$tone}` in color\";\n            @return null;\n    }\n\n    @warn \"unknown color `#{$color}` in palette\";\n    @return null;\n\n}\n","/**\n * typography/_typography.scss Typography\n *\n * Write a description\n */\n","/**\n * components/_colors.scss Colors\n *\n * Write a description\n */\n","/**\n * components/_buttons.scss Buttons\n *\n * Write a description\n */\n","/**\n * components/_forms.scss Forms\n *\n * Write a description\n */\n"]}